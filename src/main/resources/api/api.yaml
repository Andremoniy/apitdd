openapi: 3.0.3
info:
  title: Test Driven API Development example
  description: Test Driven API Development example
  version: 1.0.0

paths:
  /api/books:
    get:
      tags:
        - Books API
      responses:
        '200':
          description: A list of Books in the catalogue
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookDto'
    post:
      tags:
        - Books API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBookDto'
      responses:
        '201':
          description: The new book item has been added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookDto'

  /api/books/{id}:
    delete:
      tags:
        - Books API
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the book to delete
      responses:
        '200':
          description: The book was deleted
    get:
      tags:
        - Books API
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the book to display
      responses:
        '200':
          description: The requested book details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDetailsDto'
    patch:
      tags:
        - Books API
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the book to update
      requestBody:
        description: The updatable part of the book details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBookDetailsDto'
      responses:
        '200':
          description: The updated book details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDetailsDto'

components:
  schemas:
    UpdateBookDetailsDto:
      type: object
      properties:
        quantityInStock:
          type: integer

    BaseBookDto:
      type: object
      allOf:
        - $ref: '#/components/schemas/UpdateBookDetailsDto'
        - properties:
            title:
              type: string
            author:
              type: string

    BookDto:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseBookDto'
        - properties:
            id:
              type: integer

    CreateBookDto:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseBookDto'
        - properties:
            isbn:
              type: string
            publisher:
              type: string
            publicationDate:
              type: string
              format: date

    BookDetailsDto:
      type: object
      allOf:
        - $ref: '#/components/schemas/BookDto'
        - $ref: '#/components/schemas/CreateBookDto'